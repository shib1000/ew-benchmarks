apiVersion: v1
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s # By default, scrape targets every 15seconds. # Attach these labels to any time series or alerts when #communicating with external systems (federation, remote storage, #Alertmanager).
      external_labels:
        monitor: 'codelab-monitor'
    # Scraping Prometheus itself
    scrape_configs:
    - job_name: 'prometheus'
      scrape_interval: 5s
      static_configs:
      - targets: ['localhost:9090']
    - job_name: 'kubernetes-service-endpoints'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - ns-personal-shibmish
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: ns-personal-shibmish
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: ns-personal-shibmish
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '9090'
    spec:
      containers:
      - name: prometheus-cont
        image: quay.io/prometheus/prometheus:v2.15.2
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        ports:
        - containerPort: 9090
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config
      serviceAccountName: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  labels:
    run: prometheus-service
  namespace: ns-personal-shibmish
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 9090
  selector:
    app: prometheus
---
---
apiVersion: contour.heptio.com/v1beta1
kind: IngressRoute
metadata:
  annotations:
    kubernetes.io/ingress.class: contour-corp
  name: prometheus-ingress
  namespace: ns-personal-shibmish
spec:
  virtualhost:
    fqdn: shibu-prometheus.sandbox.cloud.adobe.io
    tls:
      secretName: heptio-contour/cluster-ssl-alternate
  routes:
    - match: /
      permitInsecure: true
      perFilterConfig:
        envoy.filters.http.header_size:
          header_size:
            max_bytes: 12288
      services:
        - healthCheck:
            healthyThresholdCount: 1
            intervalSeconds: 60
            path: /ping
            timeoutSeconds: 5
            unhealthyThresholdCount: 3
          name: prometheus-service
          port: 80
      timeout: 60s
